#!/usr/bin/env ruby
require 'pry'

class Hyde
  attr_reader :action, :path

  def initialize(action = ARGV[0], path = ARGV[1])
    @action = action
    @path   = path
  end

  def clone(source, destination)
    FileUtils.cp_r(source, destination)
  end

  def check_path(path)
    Dir.exist?(path)
  end

  def parse_submission
    if action == 'new'
      build_new
    elsif action == 'build'
      build_output
    end
  end

  def build_new
    raise ArgumentError if check_path(path)
    timestamp = Time.new.to_s.split[0]
    clone('bin/template/.', path)
    full_path_to_welcome = path + "/source/posts/"
    File.rename(full_path_to_welcome + 'welcome.markdown', full_path_to_welcome + timestamp + '-welcome-to-hyde.markdown')
  end

  def build_output
    FileUtils.cp_r(path + '/source/.', path + '/_output')
    # Dir.glob(path + '/_output/*.markdown') do |md_file|
    Dir.glob(path + '/_output' + '/**/*.markdown') do |md_file|
      binding.pry
    end
  end

    # Iterate through all the files and directories in the source directory
    # If an element is a Markdown file, convert it to html and copy it to the appropriate place inside of _output
    # If an element is any other type of File, simply copy it to the appropriate place inside _output
    # If an element is directory, create a matching subdirectory inside the _output directory, then repeat this process for any files or folders within it.


end


if __FILE__ == $0

  Hyde.new.parse_submission

end
